#coding:utf_8

import urllib
import urllib2
import re
import thread
import time
import MySQLdb

########################　糗事百科类  ########################
class QSBK:

    def __init__(self):
        self.pageIndex = 0
        self.user_agent = 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'
        self.headers = {'User-Agent' : self.user_agent}
        self.stories = []
        self.enable = False
     
    def getPage(self, pageIndex):
        try:
            url = 'http://www.qiushibaike.com/hot/page/' + str(pageIndex)
            request = urllib2.Request(url, headers = self.headers)
            response = urllib2.urlopen(request)
            pageCode = response.read().decode('utf-8')
            return pageCode
        except urllib2.URLError, e:
            if hasattr(e, "reason"):
                print u"连接糗事百科失败,错误原因:", e.reason
                return None
    
    def getPageItem(self, pageIndex):
        pageCode = self.getPage(pageIndex)
        if not pageCode:
            print "页面加载失败...."
            return None
        pattern = re.compile('<div.*?class="author">.*?<a.*?(.*?)</a>.*?</div>.*?'+
                         '<div.*?class="content">(.*?)</div>.*?'+
                         '<div.*?class="stats">(.*?)</div>', re.S)
        print pattern.read()
        items = re.findall(pattern, pageCode)
        pageStories = []
        # handle elements
        for item in items:
            # first one
            ## to get user name
            tmp = item[0].split('\n',)
            username = tmp[2]
            # print username

            # second one
            ## to get content
            tmp = item[1].replace('\n', '')
            pattern = re.compile('(.*)?<!--(.*)?-->', re.S)
            tmpItem = re.findall(pattern, tmp)
            content = tmpItem[0][0]
            date = tmpItem[0][1].split(' ')[0]
            # print content, date

            # third one
            ## to get comment "好笑"
            pattern = re.compile('<span.*?class="stats-vote"><i.*?class="number">(.*?)</i>(.*?)</span>', re.S)
            tmpItem = re.findall(pattern, item[2])
            if len(tmpItem) != 0:
                funny = tmpItem[0][1].strip()
                funnyNum = tmpItem[0][0]
                # print tmpItem[0][1].strip(), tmpItem[0][0]

            ## to get comment "评论"
            pattern = re.compile('<span.*?class="stats-comments">(.*?)<i.*?class="number">(.*?)</i>(.*?)</a>', re.S)
            tmpItem = re.findall(pattern, item[2])
            if len(tmpItem) != 0:
                comment = tmpItem[0][2].strip()
                commentNum = tmpItem[0][1]
                # print tmpItem[0][2].strip(), tmpItem[0][1]
            
            funnyNum = locals().get('funnyNum', '0')
            commentNum = locals().get('commentNum', '0')
            pageStories.append([username, date, content, funnyNum, commentNum])
        return pageStories
    
    def loadPage(self):
        if self.enable == True:
            if len(self.stories) < 2:
                pageStories = self.getPageItem(self.pageIndex + 1)
                if pageStories:
                    self.stories.append(pageStories)
                    self.pageIndex += 1
    
    def getOneStory(self, pageStories):
        for story in pageStories:
            input = raw_input()
            self.loadPage
            if input == 'Q' or input == 'q':
                self.enable = False
                return
            print u'第%d页\t发布人:%s\t发布时间:%s\n%s\n好笑:%s\t评论:%s\n' %(self.pageIndex, story[0], story[1], story[2], 
                                                                 story[3], story[4])
    def start(self):
        print u'正在读取糗事百科,按回车查看新段子，Q退出'
        self.enable = True
        self.loadPage()
        nowPage = 0
        while self.enable:
            if len(self.stories) > 0:
                pageStories = self.stories[0]
                del self.stories[0]
                self.getOneStory(pageStories)
            else:
                self.loadPage()


########################　数据库类  ########################
class MySQLDB:
    def __init__(self):
        self.spider = QSBK()
        
        #=======================================================================
        # self.host = 'localhost'
        # self.user = 'root'
        # self.passwd = 'root'
        # self.db = 'Python'
        # self.port = 3306
        #=======================================================================
        
        #Database on my OSX
        self.host = 'localhost'
        self.user = 'root'
        self.passwd = 'alchemist8'
        self.db = 'Python'
        self.port = 3306
        self.charset = 'utf8'
        try:
            self.conn = MySQLdb.Connection(host = self.host, user = self.user, 
                                           passwd = self.passwd, db = self.db, 
                                           port = self.port, charset= self.charset)
        except MySQLdb.Error, e:
            print 'Mysql Error %d: %s' %(e.args[0], e.args[1])
        self.cursor = self.conn.cursor()

        # 解决汉字乱码
        self.cursor.execute("SET NAMES utf8")
        self.cursor.execute("SET CHARACTER_SET_CLIENT=utf8")
        self.cursor.execute("SET CHARACTER_SET_RESULTS=utf8")
        self.conn.commit()

    def insertQSBK(self):
        self.spider.enable = True
        self.spider.loadPage()
        for story in self.spider.stories[0]:
            #sql = """INSERT INTO QSBK(USERNAME, DATE, CONTENT, FUNNYNUM, COMMENTNUM)
            # VALUES (%s, %s, %s, %s, %s)""" % (story[0], story[1], story[2], story[3], story[4])
            sql = """INSERT INTO QSBK (USERNAME, DATE, CONTENT, FUNNYNUM, COMMENTNUM)
              VALUES (%s, %s, %s, %s, %s)"""
            try:
               self.cursor.execute(sql, [story[0], story[1], story[2], story[3], story[4]])
               self.conn.commit()
            except MySQLdb.Error,e:
               print "Mysql Error %d: %s" % (e.args[0], e.args[1])
               self.conn.rollback()

        self.conn.close()


########################　运行  ########################
spider = QSBK()
spider.start()

#mysql = MySQLDB()
#mysql.insertQSBK()